#!/bin/sh

# Copyright 2008, 2009  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Modified for MOPSLinux <www.mopslinux.org> by NK <nk-man@yandex.ru>

VERSION=${VERSION:-1.1.18}
ARCH=${ARCH:-i686}
BUILD=${BUILD:-1}

NUMJOBS=${NUMJOBS:-" -j2 "}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "arm" ]; then
  SLKCFLAGS="-O2 -march=armv4 -mtune=xscale"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "armel" ]; then
  SLKCFLAGS="-O2 -march=armv4t"
  LIBDIRSUFFIX=""
fi

SOURCE=http://releases.mozilla.org/pub/mozilla.org/seamonkey/releases/$VERSION/seamonkey-$VERSION.source.tar.gz
if [ ! -e seamonkey-$VERSION.source.tar.gz ]; then
	wget -c $SOURCE
fi

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-seamonkey
rm -rf $PKG
mkdir -p $TMP $PKG/usr

cd $TMP
rm -rf mozilla
tar xzf $CWD/seamonkey-${VERSION}.source.tar.gz || exit 1
cd mozilla || exit 1

# The build seems to fail without this:
zcat $CWD/seamonkey.sqlite3.static.diff.gz | patch -p1 --verbose || exit 1

# Add /usr/lib/mozilla/plugins to MOZ_PLUGINS_PATH:
zcat $CWD/seamonkey.moz_plugin_path.diff.gz \
  | sed -e "s#usr/lib#usr/lib${LIBDIRSUFFIX}#g" \
  | patch -p1 --verbose || exit 1
rm -f xpfe/bootstrap/mozilla.in.orig

# Make sure the perms/ownerships are sane:
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

# Fix a long standing bug that's prevented staying current on GTK+.
# Thanks to the BLFS folks.  :-)
cat >> layout/build/Makefile.in << EOF

ifdef MOZ_ENABLE_CANVAS
EXTRA_DSO_LDOPTS += \$(XLDFLAGS) -lX11 -lXrender
endif

EOF

chown -R root:root .
BUILD_OFFICIAL=1 MOZILLA_OFFICIAL=1 \
./configure --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --enable-optimize="$CFLAGS" \
  --disable-debug \
  --with-default-mozilla-five-home=/usr/lib${LIBDIRSUFFIX}/seamonkey-${VERSION} \
  --enable-strip \
  --disable-tests \
  --enable-svg \
  --enable-system-cairo \
  --enable-canvas \
  --disable-short-wchar \
  --enable-nspr-autoconf \
  --enable-extensions=default,irc \
  --enable-crypto \
  --disable-xprint \
  --without-system-nspr \
  --with-system-zlib \
  --with-system-jpeg \
  --with-system-png \
  --with-system-mng \
  --enable-application=suite \
  --enable-xft \
  --host=$ARCH-slackware-linux \
  --target=$ARCH-slackware-linux \
  --build=$ARCH-slackware-linux

BUILD_OFFICIAL=1 MOZILLA_OFFICIAL=1 make $NUMJOBS -s export || exit 1
BUILD_OFFICIAL=1 MOZILLA_OFFICIAL=1 make $NUMJOBS -s libs || exit 1
BUILD_OFFICIAL=1 MOZILLA_OFFICIAL=1 DESTDIR=$PKG make install || exit 1

# Install nss headers.
mkdir -p $PKG/usr/include/seamonkey-${VERSION}/nss
find security/nss/lib -name "*.h" -type f -exec cp -a {} $PKG/usr/include/seamonkey-${VERSION}/nss \;
chown -R root:root $PKG/usr/include/seamonkey-${VERSION}/nss
chmod 644 $PKG/usr/include/seamonkey-${VERSION}/nss/*
# Create a more generic include files symlink:
( cd $PKG/usr/include
  if [ ! -e seamonkey ]; then
    ln -sf seamonkey-${VERSION} seamonkey
  fi
)

# Let the nspr be found by gxine:
( cd $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig; ln -s seamonkey-nspr.pc nspr.pc )

# A Better Way to handle the problem below is simply to add /usr/lib/seamonkey
# to /etc/ld.so.conf.  After all, the various Mozilla offshoots all set an
# LD_LIBRARY_PATH to make sure *they* use the right libraries anyway, and as
# far as I know seamonkey has the only set of Mozilla development libraries
# right now.  Plus, doing it this way doesn't stomp all over efforts by people
# who would like to use seamonkey-nss-solibs.

## Link some libraries into /usr/lib.  Unless this is done, some things (like gxine)
## will be unable to load them, even if they linked with them successfully.
#( cd $PKG/usr/lib${LIBDIRSUFFIX} && ( for somelib in libmozjs.so libnspr4.so libnss3.so libplc4.so libplds4.so libsmime3.so libsoftokn3.so libssl3.so ; do
#    # Link to it:
#    ln -sf seamonkey-${VERSION}/$somelib .
#  done )
#)

# Compress and if needed symlink the man pages:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

# Strip files:
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# This remains the standard plugin directory for all browsers.
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/mozilla/plugins

# Some software won't compile without this symlink:
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  if [ ! -e seamonkey ]; then
    ln -sf seamonkey-${VERSION} seamonkey
  fi
)

mkdir -p $PKG/usr/share/applications
cp -a $CWD/*.desktop $PKG/usr/share/applications
chown -R root:root $PKG/usr/share/applications
chmod 644 $PKG/usr/share/applications/*
mkdir -p $PKG/usr/share/pixmaps
cp -a $CWD/*.png $PKG/usr/share/pixmaps
chown -R root:root $PKG/usr/share/pixmaps
chmod 644 $PKG/usr/share/pixmaps/*

mkdir -p $PKG/usr/doc/seamonkey-$VERSION
cp -a \
  LEGAL LICENSE README.txt \
  $PKG/usr/doc/seamonkey-$VERSION

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
zcat $CWD/doinst.sh.gz | sed -e "s#usr/lib#usr/lib${LIBDIRSUFFIX}#g" \
  > $PKG/install/doinst.sh

cd $TMP/package-seamonkey
/sbin/makepkg -l y -c n -p $CWD/seamonkey-$VERSION-$ARCH-$BUILD.tgz


echo "MPKG"

  AUTHOR=${AUTHOR:-NK}
  EMAIL=${EMAIL:-nk-man@yandex.ru}

PRGNAM=seamonkey
PACKAGE_NAME=$PRGNAM
TAGS=network,xapps,

  mpkg convert $CWD/$PACKAGE_NAME-$VERSION$SVN-$ARCH-$BUILD.tgz || exit 1
  mpkg -P gendeps2 $CWD/$PACKAGE_NAME-$VERSION$SVN-$ARCH-$BUILD.tgz || exit 1
  TAGZ=""
  for tag in ${TAGS//,/ } ;
  do
  TAGZ+="--add-tag=$tag "
  done
  if [ -e $CWD/CHANGELOG ]; then
      TAGZ+="--changelog=$CWD/CHANGELOG "
  fi
 
  if [ -e $CWD/ADD-DEP ]; then
      for dep in `cat $CWD/ADD-DEP` ;
      do
          TAGZ+="--add-dep=$dep "
      done
  fi
  if [ -e $CWD/REMOVE-DEP ]; then
      for rd in `cat $CWD/REMOVE-DEP` ;
      do
          TAGZ+="--remove-dep=$rd "
      done
  fi
 
  mpkg-setmeta $CWD/$PACKAGE_NAME-$VERSION$SVN-$ARCH-$BUILD.tgz --maintainer-name=$AUTHOR --maintainer-email=$EMAIL $TAGZ
  mpkg-validate $CWD/$PACKAGE_NAME-$VERSION$SVN-$ARCH-$BUILD.tgz

cd $CWD
tar vczf $PRGNAM-$VERSION-$BUILD.tar.gz slack-desc $PRGNAM.SlackBuild *.desktop *.png *.diff.gz doinst.sh.gz

echo "DONE"
